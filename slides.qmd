---
title: "World Development Indicators Analysis"
author: "Lydia Lingyun Zhang"
date: today
format: 
  revealjs:
    theme: solarized
    transition: fade
    slide-number: true
    chalkboard: true
bibliography: references.bib
execute:
  echo: false
  warning: false
---

# Introduction

- **Dataset**: **World Development Indicators dataset** published by the [World Bank](https://databank.worldbank.org/source/world-development-indicators) [@WorldBank2022], focusing on one year (2022)

- **Focus**: GDP per capita, life expectancy, and total population (2022)

- **Steps**: 
  - Data Quality Check
  - Exploratory Data Analysis with Visualizations
  - Table for Key Summary Statistics

---
```{python}
import pandas as pd

# Load the dataset
df = pd.read_csv("data/wdi.csv")

```

## Exploratory Data Analysis
After reviewing the dataset, we decided to choose four indicators for further exploratory data analysis:  `country`, `gdp_per_capita`, `life_expectancy`, and `total_population`. 

```{python}

df_selected = df[["country", "gdp_per_capita", "life_expectancy", "total_population"]]

```

---

## Data Quality Check
1. No duplicated rows.
2. Missing values in GDP per Capita (6.45%) and Life Expectancy (3.69%).

```{python}

# Check for missing values and calculate percentage
missing_values = df_selected.isnull().sum()
missing_percentage = (missing_values / len(df_selected)) * 100

# Check for duplicated rows
duplicate_count = df_selected.duplicated().sum()

# Create a summary table
missing_summary = pd.DataFrame({
    "Missing Values": missing_values,
    "Missing Percentage (%)": missing_percentage
})

```

---

## Distribution Analysis Before Cleaning

- **GDP per Capita**: Highly skewed → **Median Imputation**.  
- **Life Expectancy**: Normal distribution → **Mean Imputation**.  

```{python}
#| echo: false
#| fig-cap: "Distribution of GDP per Capita and Life Expectancy Before Cleaning. Data Source: World Bank [@WorldBank2022]."
#| label: fig-dist-gdp-lifeexp

import matplotlib.pyplot as plt
import seaborn as sns

# Set up the figure layout
fig, axes = plt.subplots(1, 2, figsize=(12, 5))

# Histogram for GDP per Capita
sns.histplot(df_selected["gdp_per_capita"].dropna(), bins=30, kde=True, ax=axes[0], color="blue")
axes[0].set_title("Distribution of GDP per Capita")
axes[0].set_xlabel("GDP per Capita (USD)")

# Histogram for Life Expectancy
sns.histplot(df_selected["life_expectancy"].dropna(), bins=30, kde=True, ax=axes[1], color="green")
axes[1].set_title("Distribution of Life Expectancy")
axes[1].set_xlabel("Life Expectancy (Years)")

plt.tight_layout()
plt.show()
```

```{python}

# Impute missing values
df_selected["gdp_per_capita"].fillna(df_selected["gdp_per_capita"].median(), inplace=True)
df_selected["life_expectancy"].fillna(df_selected["life_expectancy"].mean(), inplace=True)

# Create a cleaned dataset
df_clean = df_selected.copy()

```

---

## Cleaned Dataset & Statistical Summary

After handling missing values, we review the dataset and its key statistics.Table @tbl-summary-stats is a summary of key statistics for the cleaned dataset:

<br>
```{python}
#| tbl-cap: "Summary Statistics for Key Indicators (2022). Data Source: World Bank [@WorldBank2022]."
#| label: tbl-summary-stats

summary_stats = df_clean.describe().T
summary_stats.style.format("{:.2f}")
```


---

## Exploratory Visualizations

Now that we’ve handled missing values and examined distributions, let’s explore key relationships between indicators using different visualizations.

<br>

To better understand the key indicators, we use:

1. A Bar Chart (Top 10 countries by GDP per Capita).

2. A Scatter Plot (GDP per Capita vs. Life Expectancy).

---

### **Top 10 Countries by GDP per Capita **

```{python}
#| echo: false 
#| fig-cap: "Top 10 Countries by GDP per Capita (2022). Data Source: World Bank [@WorldBank2022]."
#| label: fig-gdp-top10

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Get top 10 countries by GDP per capita
top_gdp = df_clean.sort_values("gdp_per_capita", ascending=False).head(10)

# Create figure
plt.figure(figsize=(10, 5))
sns.barplot(x="gdp_per_capita", y="country", data=top_gdp, palette="viridis")

# Labels and title
plt.xlabel("GDP per Capita (USD)")
plt.ylabel("Country")
plt.title("Top 10 Countries by GDP per Capita (2022)")

# Show plot
plt.show()
```

---

### **Relationship Between GDP per Capita and Life Expectancy **

```{python}
#| echo: false
#| fig-cap: "Relationship Between GDP per Capita and Life Expectancy. Data Source: World Bank [@WorldBank2022]."
#| label: fig-gdp-lifeexp

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(8, 5))
sns.scatterplot(x=df_clean["gdp_per_capita"], y=df_clean["life_expectancy"], alpha=0.6, color="blue")
plt.xscale("log")  # Log transformation for better visualization
plt.xlabel("GDP per Capita (Log Scale, USD)")
plt.ylabel("Life Expectancy (Years)")
plt.title("GDP per Capita vs. Life Expectancy (2022)")
plt.show()
```

---

## **Conclusion** {style="font-size: 32px;"}

<span style="font-size: 28px;">
In this presentation, we analyzed the **World Development Indicators dataset**, focusing on **GDP per capita, life expectancy, and total population**. 
</span>

- <span style="font-size: 26px;">**A Bar Chart** displaying the **Top 10 countries by GDP per Capita** to identify the wealthiest nations (see Figure @fig-gdp-top10).</span>

- <span style="font-size: 26px;">**A Scatter Plot** exploring the **relationship between GDP per Capita and Life Expectancy**, assessing economic prosperity's impact on public health (see Figure @fig-gdp-lifeexp). This relationship has been extensively studied, with findings suggesting that higher GDP per capita is often associated with increased life expectancy [@genus2019].</span>

- <span style="font-size: 26px;">Table @tbl-summary-stats provides key summary statistics for **GDP per Capita, Life Expectancy, and Total Population** across 217 countries.</span>


---
## References